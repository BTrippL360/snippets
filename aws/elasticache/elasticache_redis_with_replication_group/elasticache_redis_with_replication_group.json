{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Create a VPC containing two subnets and an auto scaling group containing instances with Internet access.",

  "Parameters" : {

    "RedisNodeType" : {
      "Description" : "elasticache Redis Node Instance Type",
      "Type" : "String",
      "Default" : "cache.m3.medium",
      "AllowedValues" : [ "cache.m3.medium" ],
      "ConstraintDescription" : "must be an m3.medium - the least costly machine that can use a Replication Group."
    }
  },

  "Mappings" : {
    "AWSRegion2AZ" : {
      "us-east-1" : { "A" : "us-east-1b", "B" : "us-east-1c", "C" : "us-east-1c", "D" : "us-east-1d" },
      "us-west-1" : { "A" : "us-west-1b", "B" : "us-west-1c"  },
      "us-west-2" : { "A" : "us-west-2a", "B" : "us-west-2b", "C" : "us-west-2c"  }
    }
  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/24"
      }
    },
    "InternetGateway" : {
       "Type" : "AWS::EC2::InternetGateway"
    },
    "PublicInternetRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : [ "InternetGateway", "PublicInternetRouteTable" ] ,
      "Properties" : {
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" },
        "RouteTableId" : { "Ref" : "PublicInternetRouteTable" }
      }
    },
    "VPCGatewayAttachment" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
          "InternetGatewayId" : { "Ref" : "InternetGateway" },
          "VpcId" : { "Ref" : "VPC" }
       }
    },
    "PublicInternetRouteTable" : {
       "Type" : "AWS::EC2::RouteTable",
       "Properties" : {
          "VpcId" : { "Ref" : "VPC" }
       }
    },
    "PublicSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AWSRegion2AZ", { "Ref" : "AWS::Region" }, "A" ] },
        "CidrBlock" : "10.0.0.0/25",
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    "PublicSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AWSRegion2AZ", { "Ref" : "AWS::Region" }, "B" ] },
        "CidrBlock" : "10.0.0.128/25",
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    "PublicSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicInternetRouteTable" },
        "SubnetId" : { "Ref" : "PublicSubnetA" }
      }
    },
    "PublicSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicInternetRouteTable" },
        "SubnetId" : { "Ref" : "PublicSubnetB" }
      }
    },
    "RedisParameterGroup" : {
      "Type": "AWS::ElastiCache::ParameterGroup",
      "Properties": {
        "CacheParameterGroupFamily" : "redis2.8",
        "Description" : "RedisParameterGroup"
      }
    },
    "RedisSubnetGroup" : {
      "Type": "AWS::ElastiCache::SubnetGroup",
      "Properties": {
        "Description" : "RedisSubnetGroup",
        "SubnetIds" : [
          { "Ref" : "PublicSubnetA" },
          { "Ref" : "PublicSubnetB" }
        ]
      }
    },
    "RedisSecurityGroup" : {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription" : "RedisSecurityGroup",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "6379",
          "ToPort" : "6379" }
        ]
      }
    },
    "RedisReplicationGroup" : {
      "Type" : "AWS::ElastiCache::ReplicationGroup",
      "Properties": {
        "AutomaticFailoverEnabled" : "true",
        "CacheNodeType" : { "Ref" : "RedisNodeType" },
        "CacheParameterGroupName" : { "Ref" : "RedisParameterGroup" },
        "CacheSubnetGroupName" : { "Ref" : "RedisSubnetGroup" },
        "Engine" : "redis",
        "EngineVersion" : "2.8.24",
        "NumCacheClusters" : "2",
        "PreferredCacheClusterAZs" : [ 
          {"Fn::FindInMap" : [ "AWSRegion2AZ", { "Ref" : "AWS::Region" }, "A" ] },
          {"Fn::FindInMap" : [ "AWSRegion2AZ", { "Ref" : "AWS::Region" }, "B" ] } ],
        "ReplicationGroupDescription" : "RedisReplicationGroup",
        "SecurityGroupIds" : [ { "Ref" : "RedisSecurityGroup" } ]
      }
    }
  },

  "Outputs" : {
  }

}
