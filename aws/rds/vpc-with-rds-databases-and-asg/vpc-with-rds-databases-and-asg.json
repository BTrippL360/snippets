{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Create a VPC containing two subnets and an auto scaling group containing instances with Internet access.",

  "Parameters" : {
    "dbInstanceType" : {
      "Description" : "db instance type",
      "Type" : "String",
      "Default" : "db.r3.large",
      "AllowedValues" : [ "db.r3.large", "db.r3.xlarge", "db.r3.2xlarge", "db.r3.4xlarge", "db.r3.8xlarge" ],
      "ConstraintDescription" : "must be a valid aurora and MySQL instance type. Currently only "
    },
    "dbClientInstanceType" : {
      "Description" : "db EC2 instance type",
      "Type" : "String",
      "Default" : "c4.large",
      "AllowedValues" : [ "c4.large" ],
      "ConstraintDescription" : "must be a valid EC2 instance type. Currently only c4 type recommended."
    },
    "KeyName" : {
      "Description" : "EC2 Key Name",
      "Type" : "String"
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.micro" : { "Arch" : "64" },
      "t2.small" : { "Arch" : "64" },
      "c4.large" : { "Arch" : "64" }
    },
    "AWSRegionArch2AMI" : {
      "us-east-1" : { "64" : "ami-7b89cc11" },
      "us-west-1" : { "64" : "ami-809df3e0" },
      "us-west-2" : { "64" : "ami-d24c5cb3" }
    },
    "AWSRegion2AZ" : {
      "us-east-1" : { "A" : "us-east-1b", "B" : "us-east-1c", "C" : "us-east-1d", "D" : "us-east-1d" },
      "us-west-1" : { "A" : "us-west-1a", "B" : "us-west-1b", "C" : "us-west-1c"  },
      "us-west-2" : { "A" : "us-west-2a", "B" : "us-west-2b", "C" : "us-west-2c"  }
    }
  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/23"
      }
    },
    "InternetGateway" : {
       "Type" : "AWS::EC2::InternetGateway"
    },
    "PublicInternetRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : [ "InternetGateway", "PublicInternetRouteTable" ] ,
      "Properties" : {
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" },
        "RouteTableId" : { "Ref" : "PublicInternetRouteTable" }
      }
    },
    "VPCGatewayAttachment" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
          "InternetGatewayId" : { "Ref" : "InternetGateway" },
          "VpcId" : { "Ref" : "VPC" }
       }
    },
    "PublicInternetRouteTable" : {
       "Type" : "AWS::EC2::RouteTable",
       "Properties" : {
          "VpcId" : { "Ref" : "VPC" }
       }
    },
    "PublicSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AWSRegion2AZ", { "Ref" : "AWS::Region" }, "A" ] },
        "CidrBlock" : "10.0.0.0/25",
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    "PublicSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AWSRegion2AZ", { "Ref" : "AWS::Region" }, "B" ] },
        "CidrBlock" : "10.0.0.128/25",
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    "PublicSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicInternetRouteTable" },
        "SubnetId" : { "Ref" : "PublicSubnetA" }
      }
    },
    "PublicSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicInternetRouteTable" },
        "SubnetId" : { "Ref" : "PublicSubnetB" }
      }
    },

    "dbClientLaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "AssociatePublicIpAddress" : "true",
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "dbClientInstanceType" },
                                          "Arch" ] } ] },
        "SecurityGroups" : [ { "Ref" : "dbClientSecurityGroup" } ],
        "InstanceType" : { "Ref" : "dbClientInstanceType" },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [ "",
              [
                "#!/bin/bash -\n",
                "apt-get -y update\n"
              ]
            ]
          }
        }
      }
    },
    "dbClientSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "dbClient Security Group",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : "0.0.0.0/0"
        } ],
        "SecurityGroupEgress" : [ { 
          "IpProtocol" : "tcp",
          "FromPort" : "0",
          "ToPort" : "65535",
          "CidrIp" : "0.0.0.0/0"
        } ]
      }
    },
    "dbClientAutoScalingGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "VPCZoneIdentifier" : [ { "Ref" : "PublicSubnetA" }, { "Ref" : "PublicSubnetB" } ],
        "LaunchConfigurationName" : { "Ref" : "dbClientLaunchConfig" },
        "MinSize" : "2",
        "MaxSize" : "2",
        "DesiredCapacity" : "2",
        "Tags" : [ {
          "Key" : "Name",
          "Value" : "dbClientAutoScalingGroup",
          "PropagateAtLaunch" : "true"
        } ]
      }
    },
    "dbSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "dbClient Security Group",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "3306",
          "ToPort" : "3306",
          "SourceSecurityGroupId" : { "Ref" : "dbClientSecurityGroup" }
        } ]
      }
    },
    "auroraDBCluster" : {
      "Type" : "AWS::RDS::DBCluster",
      "Properties" : {
        "AvailabilityZones" : [ { "Fn::GetAtt" : [ "PublicSubnetA", "AvailabilityZone" ] } ],
        "DBSubnetGroupName" : { "Ref" : "MySQLDBSubnetGroup" },
        "Engine" : "aurora",
        "MasterUsername" : "test",
        "MasterUserPassword" : "testtest",
        "VpcSecurityGroupIds" : [ { "Ref" : "dbSecurityGroup" } ]
      }
    },
    "MySQLDBSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
        "SubnetIds" : [ { "Ref" : "PublicSubnetA" }, { "Ref" : "PublicSubnetB" }],
        "DBSubnetGroupDescription" : "db Subnets for MySQL"
      }
    },    
    "auroraDBInstance" : {
      "Type" : "AWS::RDS::DBInstance",
      "Properties" : {
        "DBClusterIdentifier" : { "Ref" : "auroraDBCluster" },
        "DBInstanceClass" : "db.r3.large",
        "DBSubnetGroupName" : { "Ref" : "MySQLDBSubnetGroup" },
        "Engine" : "aurora",
        "PubliclyAccessible" : "false"
      }
    },
    "MySQLDBInstance" : {
      "Type" : "AWS::RDS::DBInstance",
      "Properties" : {
        "AvailabilityZone" : { "Fn::GetAtt" : [ "PublicSubnetA", "AvailabilityZone" ] },
        "AllocatedStorage" : "60",
        "DBInstanceClass" : "db.r3.large",
        "DBSubnetGroupName" : { "Ref" : "MySQLDBSubnetGroup" },
        "Engine" : "MySQL",
        "MasterUsername" : "test",
        "MasterUserPassword" : "testtest",
        "PubliclyAccessible" : "false",
        "StorageType" : "gp2" ,
        "VPCSecurityGroups" : [ { "Ref" : "dbSecurityGroup" } ]
      }
    }
  },
  "Outputs" : {
  }
}
