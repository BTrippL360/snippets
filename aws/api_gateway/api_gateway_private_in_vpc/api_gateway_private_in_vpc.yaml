---

AWSTemplateFormatVersion: 2010-09-09

Description: API Gateway

Parameters:

  TestServerInstanceType:
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro

  TestServerKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: api-gateway-test-server

  TestServerAmiId:
    # https://cloud-images.ubuntu.com/locator/ec2/
    # us-west-2 amd64 hvm:ebs-ssd 18.04
    Type: AWS::EC2::Image::Id
    Default: ami-0edf3b95e26a682df

Mappings: {}

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsHostnames: true
      EnableDnsSupport: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  PublicInternetRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicInternetRouteTable

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicInternetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.0.0.0/25
      VpcId: !Ref VPC

  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: 10.0.0.128/25
      VpcId: !Ref VPC

  PublicSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet01

  PublicSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicInternetRouteTable
      SubnetId: !Ref PublicSubnet02

  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties: 
      EndpointConfiguration: 
        Types: 
          - PRIVATE
        VpcEndpointIds:
          - !Ref ApiGatewayVPCEndpoint
      Name: api-gateway-in-vpc
      Policy:
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: execute-api:Invoke
            # note that !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccoundId}:${ApiGatewayRestApi}/*/*/*
            # might be the appropriate format but I do not know how to reference an a AWS::ApiGateway::RestApi's
            # ID within itself
            Resource: execute-api:/*/*/*
        Version: 2012-10-17

  ApiGatewayVPCEndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: !Sub ${AWS::StackName}-vpcendpoint-security-group
      VpcId: !Ref VPC

  ApiGatewayVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref ApiGatewayVPCEndpointSecurityGroup
      ServiceName: com.amazonaws.us-west-2.execute-api
      SubnetIds: 
        - !Ref PublicSubnet01
        - !Ref PublicSubnet02
      VpcEndpointType: Interface
      VpcId: !Ref VPC

  ApiGatewayTestResource:
    Type: AWS::ApiGateway::Resource
    Properties: 
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: test
      RestApiId: !Ref ApiGatewayRestApi

  ApiGatewayTestGetMethod:
    Type: AWS::ApiGateway::Method
    Properties: 
      AuthorizationType: NONE
      HttpMethod: GET
      Integration: 
        IntegrationHttpMethod: GET
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: Empty
        Type: HTTP
        Uri: http://cloudavail.com
      MethodResponses: 
        - StatusCode: 200
          ResponseModels:
            application/json: Empty
      ResourceId: !Ref ApiGatewayTestResource
      RestApiId: !Ref ApiGatewayRestApi
  
  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties: 
      DeploymentId: !Ref ApiGatewayDeployment
      RestApiId: !Ref ApiGatewayRestApi
      StageName: prod

  ApiGatewayDeployment:
    # without the DependsOn dependency, the ApiGatewayDeployment will be
    # created immediately after the creation of the AWS::ApiGateway::RestApi
    DependsOn:
      - ApiGatewayTestGetMethod
    Type: AWS::ApiGateway::Deployment
    Properties: 
      RestApiId: !Ref ApiGatewayRestApi

  TestServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Test Server Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC

  TestServerLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref TestServerAmiId
        InstanceType: !Ref TestServerInstanceType
        KeyName: !Ref TestServerKeyName
        NetworkInterfaces:
          # AssociatePublicIpAddress: true would not be common in production
          # environments but is suffecient for developing our own understanding
          - AssociatePublicIpAddress: true
            DeviceIndex: 0
            Groups: [ !GetAtt TestServerSecurityGroup.GroupId ]

  TestServerAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 1
      LaunchTemplate:
        LaunchTemplateId: !Ref TestServerLaunchTemplate
        Version: !GetAtt TestServerLaunchTemplate.LatestVersionNumber
      MaxSize: 1
      MinSize: 1
      VPCZoneIdentifier:
        - !Ref PublicSubnet01
        - !Ref PublicSubnet02
